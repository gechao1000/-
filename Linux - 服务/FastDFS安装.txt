npm set registry https://registry.npm.taobao.org/


========================FastDFS分布式文件系统==================
github
https://github.com/happyfish100/fastdfs/wiki


分布式文件系统 - FastDFS 配置 Nginx 模块及上传测试
https://www.cnblogs.com/mafly/p/fastdfs_nginx.html

aliyun
https://www.aliyun.com/jiaocheng/28474.html?spm=5176.100033.2.7.279346ddBCdhEV
https://www.cnblogs.com/chiangchou/p/fastdfs.html

=====================安装================
编译环境
	yum install git gcc gcc-c++ make automake autoconf libtool pcre pcre-devel zlib zlib-devel openssl-devel wget -y
	
磁盘目录
	所有安装包	/usr/local/src
	数据存储位置	/home/dfs/
	
安装libfatscommon, FastDFS
	git clone https://github.com/happyfish100/libfastcommon.git --depth 1
	git clone https://github.com/happyfish100/fastdfs.git --depth 1
	
	./make.sh && ./make.sh install #编译安装
	
安装fastdfs-nginx-module，nginx
	git clone https://github.com/happyfish100/fastdfs-nginx-module.git --depth 1
	cp /usr/local/src/fastdfs-nginx-module/src/mod_fastdfs.conf /etc/fdfs
	
	wget http://nginx.org/download/nginx-1.15.4.tar.gz #下载nginx压缩包
	tar -zxvf nginx-1.15.4.tar.gz #解压
	cd nginx-1.15.4/
	#添加fastdfs-nginx-module模块
	./configure --add-module=/usr/local/src/fastdfs-nginx-module/src/ 
	make && make install #编译安装
	
	
	http://blog.mayongfa.cn/193.html
	
	
netstat -unltp|grep fdfs

fdfs_monitor /etc/fdfs/storage.conf
	

=============================安装nginx=========================

yum -y install gcc gcc-c++ autoconf pcre-devel make automake
yum -y install wget httpd-tools vim

vi /etc/yum.repos.d/nginx.repo

[nginx]
name=nginx repo
baseurl=http://nginx.org/packages/centos/7/$basearch/
gpgcheck=0
enabled=1

yum install nginx
rpm -ql nginx


========================== GridFS使用及配合nginx实现文件服务 ====================
下载一个同版本的可编译的nginx 
备份文件 mv /usr/sbin/nginx /usr/sbin/nginx.20190108 

git clone https://github.com/rjhunjhunwla/nginx-gridfs
git submodule init && git submodule update

./configure --prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib64/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --with-compat --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-mail --with-mail_ssl_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-cc-opt='-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -fPIC' --with-ld-opt='-Wl,-z,relro -Wl,-z,now -pie' --add-module=/usr/local/src/nginx-gridfs 

make
替换nginx

配置nginx
    location /gfs/ {
        gridfs test
            field=filename
            type=string;
        mongo 127.0.0.1:27017;
    }


nginx -V
--prefix=/etc/nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib64/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --user=nginx --group=nginx --with-compat --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-mail --with-mail_ssl_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-cc-opt='-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -fPIC' --with-ld-opt='-Wl,-z,relro -Wl,-z,now -pie'
	
	
======================= yum mongodb ========================	
https://linuxize.com/post/how-to-install-mongodb-on-centos-7/
1.安装
vi /etc/yum.repos.d/mongodb-org-4.0.repo

[mongodb-org-4.0]
name=MongoDB Repository
baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.0/x86_64/
gpgcheck=1
enabled=1
gpgkey=https://www.mongodb.org/static/pgp/server-4.0.asc
	
yum install -y mongodb-org

2.配置
vi /etc/mongod.conf

security:
  authorization: enabled

mongo  
use admin
db.createUser(
  {
    user: "mongoAdmin", 
    pwd: "changeMe", 
    roles: [ { role: "userAdminAnyDatabase", db: "admin" } ]
  }
)
quit()
mongo -u mongoAdmin -p --authenticationDatabase admin
use admin
show users

3.启动
systemctl start mongod
	
=======================安卓模拟器========================
"D:\Program Files\Microvirt\MEmu\adb" connect 127.0.0.1:21503

adb connect 127.0.0.1:21503


开启lambda

ZLoading

https://github.com/zyao89/ZLoading
https://www.jianshu.com/p/c62332fcf8f4

======================安卓实战项目(天气app)===================
全国省市id
	guolin.tech/api/china/省id/市id
	返回格式{id, name, weather_id}

和风天气
	guolin.tech/api/weather
	账号：outlook邮箱：axwJjc7DBWjwDkh
	用户ID: HE1811161656341046
	认证key：44eb22f66d824d4984769d1adf88973c  
